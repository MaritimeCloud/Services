namespace maritimecloud.services.common.route;

/** The heading of each leg. */
enum HeadingType {
    RHUMB_LINE = 1;
    GREAT_CIRCLE = 2;
}

/** A route leg. */
message Leg {
    /** The speed over ground in knots. */
    1: float speed;

    /** Cross track starboard distance in meters. */
    2: float xtdStarboard;

    /** Cross track port distance in meters. */
    3: float xtdPort;
    
    /** The heading of the leg. */
    4: HeadingType headingType;
    
    /** The length of the navigational window in meters. */
    5: double navWindow;
}

/** A waypoint in a route. */
message Waypoint {

    /** The position. */
    1: position waypointPosition;

    /** The planned or estimated time of arrival at the waypoint position. */
    2: timestamp eta;

    /** The rate of turn of the waypoint. In degrees */
    3: float rot;

    /** The turn radius of the vessel. In nautical miles. */
    4: float turnRadius;
}

/** Intended route. */
message Route {
    /** A list of waypoints on the route . */
    1: list<Waypoint> waypoints;

    /** A list of outgoing legs on the route. One for each leg except the last. */
    2: list<Leg> outlegs;
}

broadcast IntendedRouteBroadcast {
    /** The route to follow. */
    1: Route route;

    /** The currently active waypoint, points to an index in routes waypoint list. */
    2: int activeWaypointIndex;

    /** Dynamically calculated ETAs of the active route. One for each waypoint. */
    3: list<timestamp> calculatedEtas;
}